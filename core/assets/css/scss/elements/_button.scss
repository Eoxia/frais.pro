/**
 * Les boutons se forment grâce à leurs classes CSS
 * .button -> classe de base pour un bouton
 * .float-icon -> Rajoute une icone en haut à droite du bouton
 * .strong -> texte en gras
 * .uppercase -> texte en majuscule
 * .red -> fond du bouton rouge
 * .grey -> fond du bouton gris
 * .dark -> couleur foncé comme l'interface
 * .light -> pas de fond, couleur de l'icon claire
 * .float.right -> float right
 * .float.left -> float left
 * .margin -> margin haut et bas sur le bouton
 * .radius -> ajoute un border radius de 4px
 * .progress -> Active le progress button
 * 		.load -> le bouton affiche une icone de chargement
 * 		.success -> le bouton affiche une icone succès
 * 		.error -> Le bouton affiche une icone erreur
 */

.button {
	display: inline-block;
	border: 0;
	box-shadow: none;
	background: none;
	color: #fff;
	padding: 10px 16px !important;
	vertical-align: middle;
	height: auto;
	border-radius: 0;
	@include transition;
	position: relative;
	&:hover {
		background: none;
		color: #fff;
		cursor: pointer;
		.float-icon {
			animation-name: bounceInLight;
		}
	}
	&:active {
		transform: none;
	}
	&.active, &.active:hover {
		box-shadow: none;
		transform: translateY(0);
		border: 0;
	}
	&:focus {
		box-shadow: none;
		color: #fff;
	}
	.icon {
		@include transition;
	}
	.float-icon {
		position: absolute;
		top: -6px;
		right: -6px;
		background: $color__grey;
		padding: 4px;
		border-radius: 50%;
		font-size: 12px;
	}
	.icon.dashicons {
		line-height: 1.3;
	}
	.icon, span {
		@include transition;
	}
	.icon ~ span {
		margin-left: 10px;
	}
	&.strong {
		span {
			font-weight: 700;
		}
	}
	&.uppercase {
		span {
			text-transform: uppercase;
		}
	}
	&.blue {
		background: $color__blue;
		&:hover {
			background: lighten( $color__blue, 20% );
		}
	}
	&.main {
		background: $color__main;
		&:hover {
			background: darken($color__main, 14%);
		}
	}
	&.light {
		background: none;
		color: rgba(0, 0, 0, 0.3);
	}
	&.float.left {
		float: left;
	}
	&.float.right {
		float: right;
	}
	&.margin {
		margin-top: 8px;
		margin-bottom: 8px;
	}
	&.radius {
		border-radius: 4px;
	}
	&.progress {
		.icon {
			@include transition;
			transform: translate(-50%, -50%);
		}
		.icon, &:before {
			position: absolute;
			left: 50%;
			top: 50%;
		}
		&:before {
			content: '';
			display: block;
			opacity: 0;
			transform: translate(-50%, -90%);
			@include transition;
			font-family: 'FontAwesome';
			font-size: 16px;
			animation-duration: 1s;
			animation-fill-mode: both;
		}
		&.success, &.load, &.error {
			pointer-events: none;
			&:before {
				opacity: 1;
				transform: translate(-50%, -50%);
			}
			.icon {
				opacity: 0;
				transform: translate(-50%, 10%);
			}
		}
		&.success {
			background: #47e58e;
			&:before {
				content: "\f00c";
				animation-name: progressSuccess;
			}
		}

		&.error {
			background: #e05353;
			&:before {
				content: "\f00d";
				animation-name: progressError;
			}
		}
		&.load {
			background: $color__grey;
			&:before {
				display: inline-block;
				content: '';
				border: 3px solid #fff;
				border-top: 3px solid $color__main;
				border-radius: 50%;
				width: 20px;
				height: 20px;
				position: absolute;
				z-index: 99;
				left: 50%;
				top: 50%;
				animation: spin 1s ease-out infinite;
			}
		}
	}
	&.disable {
		background: $color__grey;
		color: rgba(0,0,0,0.3);
		&:hover {
			background: $color__grey;
			color: rgba(0,0,0,0.3);
			cursor: not-allowed;
		}
	}
}
